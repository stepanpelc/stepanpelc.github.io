<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development on soft-eng.cz</title><link>https://soft-eng.cz/tags/development/</link><description>Recent content in development on soft-eng.cz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 02 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://soft-eng.cz/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes</title><link>https://soft-eng.cz/cloud-native/kubernetes/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://soft-eng.cz/cloud-native/kubernetes/</guid><description>Patching commands kubectl get deployment -n speed-ci-02-app | grep -v NAME | awk &amp;#39;{print $1}&amp;#39; | xargs -L1 kubectl patch deployment --patch &amp;#39;{\&amp;#34;spec\&amp;#34;: {\&amp;#34;template\&amp;#34;: {\&amp;#34;spec\&amp;#34;: {\&amp;#34;imagePullSecrets\&amp;#34;: [{\&amp;#34;name\&amp;#34;: \&amp;#34;nexus3\&amp;#34;}]}}}}&amp;#39; -n speed-ci-02-app Get all images from all contexts for CONTEXT in $(kubectl config view -o jsonpath=&amp;#39;{.contexts[*].name}&amp;#39;); do kubectl config use-context $CONTEXT; kubectl get pods -A -o jsonpath=&amp;#39;{range .items[*]}{.spec.containers[*].image}{&amp;#34;\n&amp;#34;}&amp;#39; | sed &amp;#39;s/\s\+/\n/g&amp;#39; | sort | uniq; done; Pod anti-affinity Pod has to be deployed on all nodes</description></item><item><title>Pandas</title><link>https://soft-eng.cz/development/pandas/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://soft-eng.cz/development/pandas/</guid><description/></item><item><title>Python basics</title><link>https://soft-eng.cz/development/python/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://soft-eng.cz/development/python/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>(Hu)go Template Primer</title><link>https://soft-eng.cz/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://soft-eng.cz/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item></channel></rss>